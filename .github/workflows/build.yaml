name: build
on:
  push: []
  schedule:
  - cron: 59 14 * * *
  pull_request: []

jobs:
  build:
    name: Build and test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, macOS-10.14, windows-2019]
        resolver: [lts-12.26, lts-13.30, lts-14.6]
    steps:
    - uses: actions/checkout@v1
      if: github.event_name != 'pull_request'
      with:
        fetch-depth: 1
    - uses: actions/checkout@v1
      if: github.event_name == 'pull_request'
      with:
        ref: ${{ github.pull_request.head.sha }}
        fetch-depth: 1
    - name: Install toolchains
      run: curl -sSL https://get.haskellstack.org/ | sh
    - name: Set up resolver
      shell: bash
      run: |
        sed \
          -i \
          -E 's/^resolver: .*$/resolver: "${{ matrix.resolver }}"/' \
          stack.yaml
        if [[ "${{ matrix.os }}" = windows-* ]]; then
          curl -L -o /usr/bin/yq \
            https://github.com/mikefarah/yq/releases/download/2.4.0/yq_windows_amd64.exe
            yq delete -i stack.yaml flags.seonbi.iconv
        fi
        cat stack.yaml
        # Try 3 times because this sometimes fails due to network error
        # on GitHub Actions.
        stack setup || stack setup || stack setup
    - name: Resolve dependencies
      run: stack install --only-dependencies
    - name: Build
      run: stack build
    - name: Test
      shell: bash
      run: |
        if [[ "${{ matrix.os }}" = "macOS-10.14" && \
              "${{ matrix.resolver }}" = "lts-12.26" ]]; then
          # On GHC-8.4 & macOS doctest does not work.
          # See also:
          #   https://github.com/sol/doctest/issues/199
          #   https://ghc.haskell.org/trac/ghc/ticket/15105
          stack test :spec
        else
          stack test
        fi
    - name: Copy executable binaries
      shell: bash
      run: cp -r "$(stack path --local-install-root)/bin" .bin
    - name: Publish artifacts
      uses: actions/upload-artifact@v1
      with:
        name: binaries
        path: .bin

  image:
    name: Docker image
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
      if: github.event_name != 'pull_request'
      with:
        fetch-depth: 1
    - uses: actions/checkout@v1
      if: github.event_name == 'pull_request'
      with:
        ref: ${{ github.pull_request.head.sha }}
        fetch-depth: 1
    - run: |
        image_name="docker.pkg.github.com/$GITHUB_REPOSITORY/bin"
        if [[ "$GITHUB_EVENT_NAME" = "pull_request" ]]; then
          sha="$(git log -n1 --format=%h)"
          tag="$image_name:git-$sha"
          docker build -t "$tag"
        else
          if [[ "$GITHUB_REF" = "refs/heads/master" ]]; then
            tag="$image_name:latest"
          else
            tag="$image_name:${GITHUB_REF:11}"
          fi
          docker build -t "$tag" .
          docker login \
            docker.pkg.github.com \
            --username "${GITHUB_REPOSITORY#*/}" \
            --password "${{ secrets.GH_TOKEN }}"
          docker push "$tag"
        fi
        docker save -o /tmp/image.tar "$tag"
        mkdir -p /tmp/images
        pushd /tmp/images
        tar xvf /tmp/image.tar
        popd
    - uses: actions/upload-artifact@v1
      with:
        name: image
        path: /tmp/images
